/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcaa_billing;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Jamie Eduardo Rosal <Jamiewertalmighty@gmail.com>
 */
public class Section_Manager extends javax.swing.JFrame {

    Student_list_adder studentAdder = null;
    String IDSection;
    String SYID;
    String SectionName;
    DefaultTableModel model = new DefaultTableModel();
    String SectionKey;
    JMenuItem Removed = new JMenuItem("Removed Student");
    JMenuItem ViewStudent = new JMenuItem("View Student Information");
    JPopupMenu menu = new JPopupMenu();
    StudentInfo_new studentInfo;
    MainFrame main;
    public String UserID;
    String StudentId;

    /**
     * Creates new form Section_Manager
     */
    public Section_Manager() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        Load_data();
        Removed.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                remove_student();
            }
        });

        ViewStudent.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {

                    if (studentInfo == null) {

                        studentInfo = new StudentInfo_new();
                        studentInfo.UserId = UserID;
                        main.DesktopPane.add(studentInfo);
                        studentInfo.setBounds(324, 1, 560, 540);
                        studentInfo.loadInformation(StudentId);
                        studentInfo.setVisible(true);
                        studentInfo.jButton2.setVisible(false);

                    } else {
                        main.DesktopPane.add(studentInfo);
                        studentInfo.UserId = UserID;
                        studentInfo.setBounds(324, 1, 560, 540);
                        studentInfo.loadInformation(StudentId);
                        studentInfo.setVisible(true);
                        studentInfo.jButton2.setVisible(false);
                    }

                } catch (ParseException ex) {
                    Logger.getLogger(Student_List.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });

        menu.add(Removed);
        menu.add(ViewStudent);

        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    menu.show(e.getComponent(), e.getX(), e.getY());
                }
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SectionDetails = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SectionD = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Section Manager");
        setAutoRequestFocus(false);
        setBounds(new java.awt.Rectangle(452, 132, 0, 0));
        setPreferredSize(new java.awt.Dimension(435, 500));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SectionDetails.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Section Manger");

        SectionD.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        SectionD.setText("Section Name and Details ");

        javax.swing.GroupLayout SectionDetailsLayout = new javax.swing.GroupLayout(SectionDetails);
        SectionDetails.setLayout(SectionDetailsLayout);
        SectionDetailsLayout.setHorizontalGroup(
            SectionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SectionDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SectionDetailsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SectionD, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        SectionDetailsLayout.setVerticalGroup(
            SectionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SectionDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(SectionD)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(SectionDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 420, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Student  ID", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 410, 340));

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 420, -1, 40));

        jButton2.setText("Removed Student");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 420, 140, 40));

        jButton3.setText("Add Student");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, -1, 40));

        jButton4.setText("Print");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 92, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (studentAdder == null) {
            studentAdder = new Student_list_adder();
            studentAdder.SectionId = IDSection;
            studentAdder.SYyear = SYID;
            studentAdder.manager = this;
            studentAdder.setVisible(true);

        } else {
            studentAdder.setVisible(true);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            PrintSection(IDSection, "sample");
        } catch (SQLException ex) {
            Logger.getLogger(Section_Manager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        SectionKey = model.getValueAt(jTable1.getSelectedRow(), 0).toString();
        StudentId = model.getValueAt(jTable1.getSelectedRow(), 1).toString();
        System.out.println(SectionKey);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        remove_student();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Section_Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Section_Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Section_Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Section_Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Section_Manager().setVisible(true);
            }
        });
    }

    void PrintSection(String ID, String Details) throws SQLException {
        try {
            JasperReport JR;
            JasperPrint JP;
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps, ps1;
            ResultSet rs, rs1 = null;
            model.setRowCount(0);
            ps = c.prepareStatement("Select Adviser from section where idsection='" + IDSection + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                System.out.println("Adviser is :" + rs.getString(1));
            }

            // String Q="%"+this.txtSearch.getText() +"%";
            // String Source="C:\\Users\\JAMIEXXX3\\Documents\\NetBeansProjects\\Phonelist\\src\\Forms\\report1.jrxml";
            JasperDesign Jd = JRXmlLoader.load(System.getProperty("user.dir") + "\\\\reports\\\\Section_List.jrxml");
            String Location = System.getProperty("user.dir") + "\\\\reports\\\\";
            String SQL = "SELECT id,F_name,M_name,L_name,sex,GradeLevel FROM dcaa_databse.student_info where id IN (Select studentid from  sectioning where section_id='" + ID + "') Order by L_name";

            JRDesignQuery JQ = new JRDesignQuery();
            JQ.setText(SQL);
            Jd.setQuery(JQ);
            JR = JasperCompileManager.compileReport(Jd);

            HashMap m = new HashMap<>();

            m.put("Section_Details", SectionName + "  Adviser:" + rs.getString(1));
            m.put("SUBREPORT_DIR", Location);
            // m.put("SY", SchoolYear.getSelectedItem());
            //m.put("SY", SchoolYear.getSelectedItem().toString());
            // m.put("Description", );
            JP = JasperFillManager.fillReport(JR, m, DBConnection.getConnection());
            ps.close();
            JasperViewer.viewReport(JP, false);

        } catch (JRException ex) {
            JOptionPane.showMessageDialog(this, ex);
            System.out.println(ex);
        }

    }

    void Load_data() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps, ps1;
            ResultSet rs, rs1 = null;
            model.setRowCount(0);
            ps = c.prepareStatement("SELECT F_name,M_name,L_name,id FROM dcaa_databse.student_info where id IN (Select studentid from  sectioning where section_id='" + IDSection + "') Order by L_name");

            rs = ps.executeQuery();
            String Name = null;
            while (rs.next()) {

                Name = rs.getString(3) + ", " + rs.getString(1) + " " + rs.getString(2);
                System.out.println("Name: " + Name);
                model.addRow(new Object[]{rs.getString("id"), Name});

            }

            ps.close();

        } catch (SQLException ex) {
            Logger.getLogger(Section_Manager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void remove_student() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ps = c.prepareStatement("DELETE FROM sectioning WHERE studentid = '" + SectionKey + "' and section_id='" + IDSection + "'");
            ps.execute();
            System.out.println("Student to be Deleted:" + SectionKey + "  " + SYID + " " + IDSection);
            JOptionPane.showMessageDialog(this, "Student Removed!");
            Load_data();
            ps.close();

        } catch (SQLException ex) {
            System.out.println(ex);
        }

    }

    void setDisplayName(String Name) {
        SectionD.setText(Name);
        SectionName = Name;
    }

    void Set_Load_Section_SY(String section, String sy) {
        IDSection = section;
        SYID = sy;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SectionD;
    private javax.swing.JPanel SectionDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
