/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcaa_billing;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jamie Eduardo Rosal <Jamiewertalmighty@gmail.com>
 */
public class Subsidy_List extends javax.swing.JFrame {

    public ArrayList<String> Selectedfee = new ArrayList();
    private static DecimalFormat df2 = new DecimalFormat("#,###.##");
    Name_Search name_Search;
    Subsidy main;
    Add_Subsidy_Student add_Subsidy_Student;
    int ID;
    DefaultTableModel model = new DefaultTableModel();
    String ReferenceNo;

    JMenuItem RemovedSub = new JMenuItem("Removed Bill");

    JPopupMenu menu = new JPopupMenu();
    String SY_ID;
    String USer_id;

    /**
     * Creates new form Subsidy_List
     */
    public Subsidy_List() {
        initComponents();
        CheckTable();
        model = (DefaultTableModel) jTable1.getModel();
        LoadData();

        RemovedSub.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println(model.getValueAt(jTable1.getSelectedRow(), 2));
                ReferenceNo = model.getValueAt(jTable1.getSelectedRow(), 2).toString();
                RemovedSubsidy();
                Activity_log();
                LoadData();

            }
        });

        menu.add(RemovedSub);

        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    menu.show(e.getComponent(), e.getX(), e.getY());
                }
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        SubsidyName = new javax.swing.JLabel();
        SubID = new javax.swing.JLabel();
        Amount1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Total = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(369, 21, 0, 0));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        SubsidyName.setText("Subsidy Name");

        SubID.setText("Subsidy Id");

        Amount1.setText("Amount");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SubsidyName, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubID, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Amount1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(481, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SubID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SubsidyName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Amount1)
                .addGap(12, 12, 12))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Student ID", "Name", "Reference Number", "Description", "Amount"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Total Subsidy");

        Total.setText("1000000002323");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Total))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Add Student");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (name_Search == null) {
            name_Search = new Name_Search();
            name_Search.setVisible(true);
            name_Search.Name_Search_Subsidy(this);
            name_Search.setAlwaysOnTop(true);

        } else {
            name_Search.setVisible(true);
            name_Search.setAlwaysOnTop(true);
            name_Search.Name_Search_Subsidy(this);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        System.out.println(model.getValueAt(jTable1.getSelectedRow(), 2));
        ReferenceNo = model.getValueAt(jTable1.getSelectedRow(), 2).toString();
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Subsidy_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Subsidy_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Subsidy_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Subsidy_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Subsidy_List().setVisible(true);
            }
        });
    }

    void LoadData(String Id) {

    }

    void CheckTable() {
        try {
            Connection conn = DBConnection.getConnection();
            DatabaseMetaData dbm = conn.getMetaData();
            ResultSet rs = dbm.getTables(null, null, "Subsidy_list", null);
            if (rs.next()) {
                System.out.println("Table exists");
                return;

            } else {
                DBConnection.init();
                Connection c = DBConnection.getConnection();
                PreparedStatement ps;
                ps = c.prepareStatement("create table subsidy_list(\n"
                        + "	ID INT NOt null auto_increment,\n"
                        + "    studentID varchar(15),\n"
                        + "    subsidyID varchar(11),\n"
                        + "    Bill_ReferenceNo varchar(11),\n"
                        + "    Amount double(15,2),\n"
                        + "    Date date,\n"
                        + "    Description varchar(255),\n"
                        + "    primary key (ID)\n"
                        + "\n"
                        + ")");
                ps.execute();
                System.out.println("Table Created");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Subsidy.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void Activity_log() {

        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            String timeStamp = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime());

            ps = c.prepareStatement("Insert into activity_log ( Activity_name, Description, Date, UseAccounts_idUseAccounts) values ('Bill Subsidy Deleted','" + ReferenceNo + "','" + timeStamp + "','" + USer_id + "')");
            ps.execute();
            System.out.println("activity loged");

        } catch (SQLException ex) {
            Logger.getLogger(Section.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void setMain(Subsidy cc) {
        main = cc;
        SY_ID = main.SY_id;
        USer_id = cc.USer_id;
        System.out.println("Sudsidy_list set Sy_id:" + SY_ID);
    }

    void AddSubssidy() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps = null, ps1, ps2;
            ResultSet rs, rs2;
            SimpleDateFormat df = new SimpleDateFormat("yyyy/MM/d");
            String timeStamp = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime());

            for (int i = 0; i < Selectedfee.size(); i++) {
                ps = c.prepareStatement("SELECT Student_Info_idStudent_Info,Amount,Particulars,Fee_Charges_idFee_Charges FROM billing where ReferenceNo ='" + Selectedfee.get(i) + "'");
                rs = ps.executeQuery();
                if (rs.next()) {
                    ps1 = c.prepareStatement("Insert into subsidy_list (studentID, subsidyID, Bill_ReferenceNo, Amount, Date, Description)values" + "('" + rs.getString(1) + "','" + ID + "','" + Selectedfee.get(i) + "','" + rs.getString("Amount") + "','" + timeStamp + "','" + rs.getString("Particulars") + "')");
                    ps1.execute();
                    System.out.println("Subsiddy Inserteds Successfully @:" + Selectedfee.get(i));

                    ps1 = c.prepareStatement("Select Amount,Fee_Charges_idFee_Charges,Student_Info_idStudent_Info,School_Year_idSchool_Year from billing where ReferenceNo='" + Selectedfee.get(i) + "'");
                    rs2 = ps1.executeQuery();
                    if (rs2.next()) {
                        System.out.println(rs2.getString("Amount"));
                        ps2 = c.prepareStatement("Insert into invoice (Value, Particulars, Category_of_charges_idCategory_of_charges, Student_Info_idStudent_Info, OrNum, DATE, School_Year_idSchool_Year, UseAccounts_idUseAccounts)values" + "('" + rs2.getString("Amount") + "','" + Selectedfee.get(i) + "','" + rs2.getString("Fee_Charges_idFee_Charges") + "','" + rs2.getString("Student_Info_idStudent_Info") + "','" + String.format("S%09d", ID) + "','" + timeStamp + "','" + rs2.getString("School_Year_idSchool_Year") + "','2')");
                        ps2.execute();

                    } else {
                        System.out.println("Subsiddy Inserteds Not Successfully");
                    }
                }

            }

            JOptionPane.showMessageDialog(this, "Charges successfully subsidized!");
        } catch (SQLException ex) {
            Logger.getLogger(Add_Subsidy_Student.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void LoadDetails() {
        try {
            model.setRowCount(0);
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("SELECT * FROM subsidy where ID ='" + ID + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                SubID.setText("Subsidy ID:" + rs.getString(1));
                SubsidyName.setText("Name:" + rs.getString(2));
                Amount1.setText(String.valueOf(df2.format(rs.getDouble(4))));
            }

        } catch (SQLException ex) {
            Logger.getLogger(Subsidy_List.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void RemovedSubsidy() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ps = c.prepareStatement("Delete from subsidy_list where Bill_ReferenceNo='" + ReferenceNo + "'");
            ps.execute();
            System.out.println("Subsidy Deleted from Subsidy List");
            ps = c.prepareStatement("Delete from invoice where  Particulars='" + ReferenceNo + "' AND OrNum='" + String.format("S%09d", ID) + "'");
            ps.execute();
            System.out.println("Subsidy Deleted from Invoice");
            JOptionPane.showMessageDialog(this, "Bill Successfully Deleted!", "Removed Bill From Subsidy", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(Subsidy_List.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void LoadData() {
        try {
            LoadDetails();
            model.setRowCount(0);
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps, ps1, ps2;
            ResultSet rs, rs2, rs3;
            ps = c.prepareStatement("Select studentID,Bill_ReferenceNo,Description,Amount  FROM subsidy_list where subsidyID='" + ID + "'");
            rs = ps.executeQuery();

            while (rs.next()) {
                ps1 = c.prepareStatement("SELECT F_name,M_name,L_name from student_info where id='" + rs.getString(1) + "'");
                rs2 = ps1.executeQuery();
                if (rs2.next()) {
                    String Name = rs2.getString(1) + " " + rs2.getString(2) + " " + rs2.getString(3);
                    model.addRow(new Object[]{rs.getString(1), Name, rs.getString(2), rs.getString(3), rs.getString(4)});
                }

            }

            System.out.println("Table Loaded");
            ps = c.prepareStatement("Select SUM(Amount)  FROM subsidy_list where subsidyID='" + ID + "'");
            rs3 = ps.executeQuery();
            if (rs3.next()) {
                Total.setText(df2.format(rs3.getDouble(1)));
            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Amount1;
    private javax.swing.JLabel SubID;
    private javax.swing.JLabel SubsidyName;
    private javax.swing.JLabel Total;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
