/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcaa_billing;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.event.AncestorListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jamie Eduardo Rosal <Jamiewertalmighty@gmail.com>
 */
public class Batch_posting extends javax.swing.JInternalFrame {

    ArrayList<String> Sydisplay = new ArrayList<String>();
    ArrayList<String> idSydisplay = new ArrayList<String>();
    DefaultComboBoxModel SYBoxModel;
    Student_list_adder StudentAdder;
    ArrayList<String> Chargelist;
    ArrayList<String> Studentlist = new ArrayList<String>();
    DefaultTableModel StudentModel = new DefaultTableModel();
    DefaultTableModel ChargeModel = new DefaultTableModel();
    Charge_list charges;
    String Userid, StudentId, ChargeId;

    JMenuItem RemovedStudent = new JMenuItem("Removed Student");
    JMenuItem RemovedCharge = new JMenuItem("Removed Charge");
    JPopupMenu menu = new JPopupMenu();
    JPopupMenu menu1 = new JPopupMenu();

    /**
     * Creates new form Batch_posting
     */
    public Batch_posting() {
        initComponents();
        StudentModel = (DefaultTableModel) StudentTable.getModel();
        ChargeModel = (DefaultTableModel) ChargeTable.getModel();

        load_SYandDepartments();

        RemovedStudent.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                StudentId = StudentTable.getValueAt(StudentTable.getSelectedRow(), 0).toString();
                System.out.println(StudentId);
                RemoveStudent(StudentId);
            }
        });

        StudentTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    menu.show(e.getComponent(), e.getX(), e.getY());

                }
            }

        });
        ChargeTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    menu1.show(e.getComponent(), e.getX(), e.getY());

                }
            }

        });

        RemovedCharge.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                ChargeId = ChargeTable.getValueAt(ChargeTable.getSelectedRow(), 0).toString();
                System.out.println(ChargeTable.getValueAt(ChargeTable.getSelectedRow(), 0).toString());
                RemoveChage(ChargeId);
            }
        });

        menu.add(RemovedStudent);
        menu1.add(RemovedCharge);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        StudentTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        ChargeTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        SY = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        Status = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1200, 550));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton3.setText("Select Student");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Select Section");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Post Bill");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(382, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(363, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(63, 63, 63)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(317, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 430));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Batch Posting");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 140, 40));

        StudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Student Id", "Name"
            }
        ));
        StudentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StudentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(StudentTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 60, 520, 380));

        ChargeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Charge ID", "Description", "Amount"
            }
        ));
        jScrollPane3.setViewportView(ChargeTable);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 460, 380));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        SY.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        SY.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SYItemStateChanged(evt);
            }
        });
        SY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SYActionPerformed(evt);
            }
        });

        jLabel2.setText("Billing School Year:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SY, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(636, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addComponent(SY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 980, 40));

        jButton5.setText("Select Charges");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 440, 130, 40));

        jButton7.setText("Close");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 440, 80, 40));

        Status.setText("Posting Status: Not Posted");
        getContentPane().add(Status, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 450, 190, 30));

        jButton2.setText("Clear All");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 440, 120, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SYActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (StudentAdder == null) {
            StudentAdder = new Student_list_adder();
            StudentAdder.set_batchPostingMode(true, this, idSydisplay.get(SY.getSelectedIndex()));
            StudentAdder.PostingListMode("Student");
            StudentAdder.setVisible(true);

        } else {

            StudentAdder.set_batchPostingMode(true, this, idSydisplay.get(SY.getSelectedIndex()));
            StudentAdder.PostingListMode("Student");
            StudentAdder.load_Studentlist();
            StudentAdder.setVisible(true);

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (charges == null) {
            charges = new Charge_list();
            charges.set_BatchPostingmode(true, this);
            charges.setVisible(true);
        } else {
            charges.set_BatchPostingmode(true, this);
            charges.setVisible(true);

        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (Chargelist == null || Chargelist.size() <= 0) {
            JOptionPane.showMessageDialog(this, "No selected charges", "CHARGE LIST ERROR", JOptionPane.INFORMATION_MESSAGE);

        } else if (Studentlist.size() <= 0 || Studentlist == null) {
            JOptionPane.showMessageDialog(this, "No selected students", "STUDENT LIST ERROR", JOptionPane.INFORMATION_MESSAGE);

        } else {
            Post_Fees();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (StudentAdder == null) {
            StudentAdder = new Student_list_adder();
            StudentAdder.set_batchPostingMode(true, this, idSydisplay.get(SY.getSelectedIndex()));
            StudentAdder.load_section();
            StudentAdder.PostingListMode("Section");
            StudentAdder.load_section();
            StudentAdder.setVisible(true);

        } else {

            StudentAdder.set_batchPostingMode(true, this, idSydisplay.get(SY.getSelectedIndex()));
            StudentAdder.load_section();
            StudentAdder.PostingListMode("Section");
            StudentAdder.load_section();
            StudentAdder.setVisible(true);

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void SYItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SYItemStateChanged

    }//GEN-LAST:event_SYItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ClearContents();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void StudentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StudentTableMouseClicked
        StudentId = StudentTable.getValueAt(StudentTable.getSelectedRow(), 0).toString();
        System.out.println(StudentId);
        // RemoveStudent(StudentId);
    }//GEN-LAST:event_StudentTableMouseClicked

    void load_SYandDepartments() {

        try {

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;

            ps = c.prepareStatement("Select idschool_year,School_Year,Semester from school_year");
            rs = ps.executeQuery();
            while (rs.next()) {
                Sydisplay.add(rs.getString(2) + "-" + rs.getString(3));
                idSydisplay.add(rs.getString(1));
            }

            rs.close();

            SYBoxModel = new DefaultComboBoxModel(Sydisplay.toArray());

            SY.setModel(SYBoxModel);

            System.out.println(idSydisplay);

        } catch (SQLException ex) {
            Logger.getLogger(Addcategories.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void addCharge(String id) {
        Chargelist.add(id);
    }

    void ClearContents() {
        ChargeModel.setRowCount(0);
        StudentModel.setRowCount(0);
        Studentlist.clear();
        Chargelist.clear();
        Status.setText("Posting Status:NOT Posted");
        JOptionPane.showMessageDialog(this, "Batch Posting Cleared");

    }

    void addStudent(String id) {
        System.out.println(id);

        if (Studentlist.contains(id)) {
            JOptionPane.showMessageDialog(this, "Student already added");
        } else {
            Studentlist.add(id);
        }
    }

    void loadDisplayCharge() {
        DBConnection.init();
        Connection c = DBConnection.getConnection();
        PreparedStatement ps;
        ResultSet rs = null;

    }

    void RemoveStudent(String IdString) {
        if (Studentlist.remove(IdString)) {
            JOptionPane.showMessageDialog(this, "Student Removed!");
            loadDisplayStudentlist();
            loadDisplayChargeList();
        } else {

            JOptionPane.showMessageDialog(this, "Student was not Removed");
        }

    }

    void RemoveChage(String IdString) {
        if (Chargelist.remove(IdString)) {
            JOptionPane.showMessageDialog(this, "Charge Removed!");
            loadDisplayStudentlist();
            loadDisplayChargeList();
        } else {

            JOptionPane.showMessageDialog(this, "Charget was not Removed");
        }

    }

    void loadDisplayStudentlist() {
        try {

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            StudentModel.setRowCount(0);
            for (int i = 0; i < Studentlist.size(); i++) {

                ps = c.prepareStatement("Select id,F_name,M_name,L_name from student_info where id='" + Studentlist.get(i) + "'");
                rs = ps.executeQuery();
                System.out.println(Studentlist.get(i) + " Student loaded");
                if (rs.next()) {
                    StudentModel.addRow(new Object[]{rs.getString(1), rs.getString("L_name") + ", " + rs.getString("F_name") + " " + rs.getString("M_name")});
                }

                ps.close();
                rs.close();

            }

        } catch (Exception e) {
        }

    }

    void loadDisplayChargeList() {

        if (Chargelist == null) {
            System.out.println("No charges .. Loaded");
        } else if (Chargelist.size() != 0) {

            try {
                DBConnection.init();
                Connection c = DBConnection.getConnection();
                PreparedStatement ps = null;
                ResultSet rs = null;
                ChargeModel.setRowCount(0);
                for (int i = 0; i < Chargelist.size(); i++) {
                    ps = c.prepareStatement("Select idFee_Charges,Fee_Name,Value from fee_charges where idFee_Charges='" + Chargelist.get(i) + "' ");
                    rs = ps.executeQuery();
                    if (rs.next()) {
                        ChargeModel.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3)});
                    }
                }
                rs.close();
                ps.close();

            } catch (SQLException ex) {
                Logger.getLogger(Batch_posting.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    void Post_Fees() {
        DBConnection.init();
        Connection c = DBConnection.getConnection();
        PreparedStatement ps, ps2;
        ResultSet rs, rs1 = null;
        String timeStamp = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime());
        String generatedReFNo = null;

        for (int i = 0; i < Studentlist.size(); i++) {

            for (int j = 0; j < Chargelist.size(); j++) {
                try {
                    ps2 = c.prepareStatement("SELECT  count(idBilling) FROM billing");
                    rs1 = ps2.executeQuery();

                    if (rs1.next()) {
                        generatedReFNo = "1" + String.format("%010d", Integer.parseInt(rs1.getString(1)) + 1);
                        System.out.println("Generated Ref No: " + generatedReFNo);
                        ps2.close();
                        rs1.close();
                    }

                    ps2 = c.prepareStatement("Select Fee_Name, Value  from fee_charges where idFee_Charges='" + Chargelist.get(j) + "'");
                    rs1 = ps2.executeQuery();

                    if (rs1.next()) {
                        ps = c.prepareStatement("Insert into billing (Student_Info_idStudent_Info, School_Year_idSchool_Year, Fee_Charges_idFee_Charges, Bill_Date, Discounts_idDiscounts, Particulars, Amount, ReferenceNo, dateCreated, UseAccounts_idUseAccounts)values" + "('" + Studentlist.get(i) + "','" + String.valueOf(idSydisplay.get(SY.getSelectedIndex())) + "','" + Chargelist.get(j) + "','" + timeStamp + "','" + -1 + "','" + rs1.getString(1) + "','" + rs1.getString(2) + "','" + generatedReFNo + "','" + timeStamp + "','" + Userid + "')");
                        ps.execute();
                        ps2.close();
                        rs1.close();

                    }

                } catch (SQLException ex) {
                    Logger.getLogger(Batch_posting.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        }
        JOptionPane.showMessageDialog(this, "Batch post succesccfully posted!");
        int op = JOptionPane.showConfirmDialog(this, "Do you want to clear posting details?", "Clear List", JOptionPane.YES_NO_OPTION);
        if (op == 0) {
            ClearContents();
            // Status.setText("Posting Status: Posted");
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ChargeTable;
    private javax.swing.JComboBox<String> SY;
    private javax.swing.JLabel Status;
    private javax.swing.JTable StudentTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
