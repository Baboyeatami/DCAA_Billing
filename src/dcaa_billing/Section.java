/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcaa_billing;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Action;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jamie Eduardo Rosal <Jamiewertalmighty@gmail.com>
 */
public class Section extends javax.swing.JInternalFrame {

    Add_Sections add_Sections = null;
    String Sectioid;
    Section_Manager section_Manager;
    DefaultTableModel model = new DefaultTableModel();
    JMenuItem UpdateItem = new JMenuItem("Update section");
    JMenuItem Delete = new JMenuItem("Delete section");
    JMenuItem AddStudents = new JMenuItem("Manage Section");
    JPopupMenu menu = new JPopupMenu();
    Section main = this;
    ArrayList<String> Sydisplay = new ArrayList<>();
    ArrayList<String> idSydisplay = new ArrayList<>();
    MainFrame mainFrame;
    DefaultComboBoxModel SYBoxModel;
    String SectionName = null;

    /**
     * Creates new form StudentInfo
     */
    public Section() {
        initComponents();
        load_SYandDepartments();
        model = (DefaultTableModel) jTable1.getModel();
        UpdateItem.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("Update");
                if (add_Sections == null) {
                    add_Sections = new Add_Sections();
                    add_Sections.update_mode(true, Sectioid, main);
                    add_Sections.loaddata_forUpdate();
                    add_Sections.setVisible(true);
                } else {
                    add_Sections.update_mode(true, Sectioid, main);
                    add_Sections.loaddata_forUpdate();
                    add_Sections.setVisible(true);

                }

            }
        });

        Delete.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("Delete");
            }
        });

        AddStudents.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("add Student");
                if (section_Manager == null) {
                    section_Manager = new Section_Manager();
                    section_Manager.main = mainFrame;
                    section_Manager.Set_Load_Section_SY(Sectioid, String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 2)));
                    section_Manager.Load_data();
                    section_Manager.setDisplayName(SectionName);
                    section_Manager.setVisible(true);
                    //section_Manager.setAlwaysOnTop(true);

                } else {
                    section_Manager.main = mainFrame;
                    section_Manager.Set_Load_Section_SY(Sectioid, String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 2)));
                    section_Manager.Load_data();
                    section_Manager.setDisplayName(SectionName);
                    section_Manager.setVisible(true);
                    // section_Manager.setAlwaysOnTop(true);
                }

            }
        });

        menu.add(UpdateItem);
        menu.add(AddStudents);
        menu.add(Delete);
        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    menu.show(e.getComponent(), e.getX(), e.getY());
                }
            }

        });
        loadData();
        setBounds(285, 8, 553, 520);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Close = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        SY = new javax.swing.JComboBox<>();

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Details");

        setClosable(true);
        setIconifiable(true);
        setTitle("Section");
        setMaximumSize(new java.awt.Dimension(1200, 550));
        setMinimumSize(new java.awt.Dimension(553, 520));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(553, 520));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Section ID", "Section Name", "School YEar"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 540, 380));

        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });
        getContentPane().add(Close, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 430, 120, 40));

        jButton3.setText("New Section");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 430, 140, 40));

        jLabel1.setText("School Year");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, 20));

        SY.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        SY.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SYItemStateChanged(evt);
            }
        });
        SY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SYActionPerformed(evt);
            }
        });
        getContentPane().add(SY, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 170, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_CloseActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        if (add_Sections == null) {
            add_Sections = new Add_Sections();
            add_Sections.update_mode(false, Sectioid, main);
            add_Sections.setVisible(true);
        } else {
            add_Sections.setVisible(true);
            add_Sections.update_mode(false, Sectioid, main);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        Sectioid = String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 0));
        SectionName = String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 1));
        System.out.println(Sectioid);
    }//GEN-LAST:event_jTable1MouseClicked

    private void SYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SYActionPerformed

    private void SYItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SYItemStateChanged

        loadData();
    }//GEN-LAST:event_SYItemStateChanged

    void loadData() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            model.setRowCount(0);
            ps = c.prepareStatement("Select idSection, SectionName,SY from section where SY='" + idSydisplay.get(SY.getSelectedIndex()) + "'");
            rs = ps.executeQuery();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), Sydisplay.get(idSydisplay.indexOf(rs.getString(3)))});

            }

        } catch (SQLException ex) {
            Logger.getLogger(Section.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void setUpdateMode() {
    }

    void load_SYandDepartments() {

        try {

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            ps = c.prepareStatement("Select idschool_year,School_Year,Semester from school_year");
            rs = ps.executeQuery();
            while (rs.next()) {
                Sydisplay.add(rs.getString(2) + "-" + rs.getString(3));
                idSydisplay.add(rs.getString(1));
            }
            rs.close();
            SYBoxModel = new DefaultComboBoxModel(Sydisplay.toArray());
            SY.setModel(SYBoxModel);

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Close;
    private javax.swing.JComboBox<String> SY;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
