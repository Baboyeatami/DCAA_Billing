/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcaa_billing;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Jamie Eduardo Rosal <Jamiewertalmighty@gmail.com>
 */
public class Login extends javax.swing.JFrame {

    MainFrame main = null;
    String UserID;
    Statements statementMode = null;
    boolean overide = false, overideCheck = false;
    String RefNo, ORnum;
    Statements statements;

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        TitleText = new javax.swing.JLabel();
        Username = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Password = new javax.swing.JPasswordField();
        Login = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 153, 102));
        setBounds(new java.awt.Rectangle(395, 218, 0, 0));
        setMinimumSize(new java.awt.Dimension(395, 218));
        setPreferredSize(new java.awt.Dimension(395, 250));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("DIGOS CENTRAL ADVENTIST ACADEMY");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 250, 20));

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Billing Management System");
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 180, 20));

        TitleText.setBackground(new java.awt.Color(255, 255, 255));
        TitleText.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        TitleText.setForeground(new java.awt.Color(255, 255, 255));
        TitleText.setText("SYSTEM LOGIN");
        jPanel1.add(TitleText, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 190, 20));

        Username.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(Username, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 250, 30));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Username");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Password");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        Password.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordActionPerformed(evt);
            }
        });
        jPanel1.add(Password, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 250, 30));

        Login.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Login.setText("Login");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });
        jPanel1.add(Login, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 250, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/DCAA Logo small.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 380, 260));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
        System.out.println("Overide Mode:" + overide);
        if (!overide) {
            LogintoSystem();
        } else {
            try {
                OverideCheck(RefNo, ORnum);
                System.out.println("Overide Check:" + overideCheck);
            } catch (IOException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_LoginActionPerformed

    private void PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordActionPerformed
        // TODO add your handling code here:
        System.out.println("Overide Mode:" + overide);
        if (!overide) {
            LogintoSystem();
        } else {
            try {
                OverideCheck(RefNo, ORnum);
                System.out.println("Overide Check:" + overideCheck);
            } catch (IOException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_PasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    void LogintoSystem() {
        try {
            try {
                DBConnection.ReadIPaddress();
            } catch (IOException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            String pass = String.valueOf(Password.getPassword());
            System.out.println(pass);
            System.out.println(Password.getPassword().toString());
            ps = c.prepareStatement("Select Password,idUseAccounts,Fname,Level,idUseAccounts from useaccounts where Username=?");
            ps.setString(1, Username.getText());
            rs = ps.executeQuery();
            boolean open = true;
            while (rs.next()) {
                System.out.println(rs.getString(1));
                if (rs.getString(1).equals(pass)) {
                    System.out.println("True Success");
                    System.out.println(rs.getString("Level") + " :User Level");

                    if (main == null) {
                        main = new MainFrame();
                        main.setUser(rs.getInt(2));
                        main.Set_DisplayUser(rs.getString("Fname"));
                        System.out.println(rs.getString("Level").equals("user"));
                        if (rs.getString("Level").equals("user")) {
                            main.jButton8.setVisible(false);
                        } else if (rs.getString("Level").equals("registrar")) {
                            main.jButton8.setVisible(false);
                            main.setRegitrarMode();
                        } else if (rs.getString("Level").equals("casher")) {
                            main.Casher();
                        } else if (rs.getString("Level").equals("principal")) {
                            main.Principal();
                        } else if (rs.getString("Level").equals("finance")) {
                            main.FinanceAdmin();
                        } else if (rs.getString("Level").equals("viewing")) {
                            System.out.println("Viewing Mode");

                            main.Viewing();
                            open = true;

                        } else {
                            main.jButton8.setVisible(true);

                        }

                        UserID = rs.getString("idUseAccounts");
                        Activity_log();
                        main.UserName = UserID;
                        main.setVisible(open);

                        dispose();

                    }

                } else {
                    //JOptionPane.showMessageDialog(this, "Login Failed");
                    System.out.println("Login failed");

                }

            }
            Password.setText(null);

        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    Boolean OverideCheck(String Ref, String ORNum) throws IOException {
        try {

            DBConnection.ReadIPaddress();
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            String pass = String.valueOf(Password.getPassword());
            System.out.println(pass);
            System.out.println(Password.getPassword().toString());
            ps = c.prepareStatement("Select Password,idUseAccounts,Fname,Level,idUseAccounts from useaccounts where Username=?");
            ps.setString(1, Username.getText());
            rs = ps.executeQuery();
            if (rs.next()) {
                System.out.println(rs.getString(1));
                if (rs.getString(1).equals(pass)) {
                    System.out.println("True Success");
                    System.out.println(rs.getString(1));

                    if (rs.getString("Level").equals("finance")) {
                        UserID = rs.getString("idUseAccounts");
                        overideCheck = true;
                        System.out.println("Overide Granted");
                        DeleteInvoice();

                    } else if (rs.getString("Level").equals("administrator")) {
                        UserID = rs.getString("idUseAccounts");

                        overideCheck = true;

                        System.out.println("Overide Granted");
                        DeleteInvoice();

                        //OverideLogin.dispose();
                    } else {
                        Password.setText(null);
                        overideCheck = false;
                        System.out.println("NOT Overide Granted");
                    }

                } else {

                    System.out.println("Login failed");
                    Password.setText(null);
                    overideCheck = false;
                    System.out.println("NOT Overide Granted");
                }

            } else {
                Password.setText(null);
                return overideCheck;

            }

        } catch (SQLException ex) {
            Logger.getLogger(Login.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return overideCheck;

    }

    void Activity_log() {

        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            String timeStamp = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime());

            ps = c.prepareStatement("Insert into activity_log ( Activity_name, Description, Date, UseAccounts_idUseAccounts) values ('System Log in','Log in','" + timeStamp + "','" + UserID + "')");
            ps.execute();
            System.out.println("activity loged");

        } catch (SQLException ex) {
            Logger.getLogger(Section.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    void Activity_logOveride() {

        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            String timeStamp = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime());

            ps = c.prepareStatement("Insert into activity_log ( Activity_name, Description, Date, UseAccounts_idUseAccounts) values ('InVoice Void Overide','Void Transaction @ Ref no. " + RefNo + " and ORnum @ " + ORnum + " ','" + timeStamp + "','" + UserID + "')");
            ps.execute();
            System.out.println("Void  transaction activity loged");

        } catch (SQLException ex) {
            Logger.getLogger(Section.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    void DeleteInvoice() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ps = c.prepareStatement("Delete  FROM dcaa_databse.invoice where Particulars='" + RefNo + "' and OrNum='" + ORnum + "'");
            ps.execute();
            JOptionPane.showMessageDialog(this, "Transaction @ Reference number:" + RefNo + " and OR number " + ORnum + " Voided Successfully!");
            this.setVisible(false);

            Activity_logOveride();
            statements.LoadStatement();
            Username.setText(null);
            Password.setText(null);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Login.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    void setReFerence_ORNum_for_Overide(String ref, String Or, Statements cc) {
        RefNo = ref;
        ORnum = Or;
        statements = cc;
        System.out.println("Reference and OR num set for Voiding:" + RefNo + " " + ORnum);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Login;
    private javax.swing.JPasswordField Password;
    public javax.swing.JLabel TitleText;
    private javax.swing.JTextField Username;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
