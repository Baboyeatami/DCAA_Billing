/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcaa_billing;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JMenuItem;

import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jamie Eduardo Rosal <Jamiewertalmighty@gmail.com>
 */
public class Student_Status_List extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    StudentBill studentBill;
    Batch_posting main;
    boolean BatchPostMode = false;
    Add_Student_status add_Student_status;
    JMenuItem UpdateItem = new JMenuItem("Update Status");
    JMenuItem RemoveItem = new JMenuItem("Remove Status");
    JPopupMenu menu = new JPopupMenu();
    String statusID;
    Student_Status_List me = this;

    /**
     * Creates new form Charge_list
     */
    public Student_Status_List() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        CreateTable();
        loadData();

        UpdateItem.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 0)));
                statusID = String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 0));
                add_Student_status = new Add_Student_status();
                add_Student_status.set_data(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 1)), String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 2)), statusID, true);
                add_Student_status.status_List = Student_Status_List.this;
                add_Student_status.setVisible(true);

            }
        });

        RemoveItem.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int op = JOptionPane.showConfirmDialog(me, "proceed to delete the selected status?");

                if (op == 0) {
                    Revomed_Status(statusID);
                    loadData();
                }
            }
        });

        menu.add(UpdateItem);
        menu.add(RemoveItem);

        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    menu.show(e.getComponent(), e.getX(), e.getY());
                }
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DCAA Billing System");
        setBounds(new java.awt.Rectangle(400, 129, 600, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("ADD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 420, 110, 40));

        jTable1.setBackground(new java.awt.Color(204, 255, 204));
        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student Status ID", "Name", "Description"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 560, 360));

        jPanel1.setBackground(new java.awt.Color(0, 153, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Student Enrollment Status");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 230, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 560, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        add_Student_status = new Add_Student_status();
        add_Student_status.status_List = this;
        add_Student_status.setVisible(true);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        System.out.println(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 0)));
        statusID = String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 0));
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student_Status_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student_Status_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student_Status_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student_Status_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student_Status_List().setVisible(true);
            }
        });
    }

    void loadData() {
        try {
            model.setRowCount(0);
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;

            ps = c.prepareStatement("SELECT * FROM dcaa_databse.student_status_list");
            rs = ps.executeQuery();
            while (rs.next()) {

                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3)});

            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    void Revomed_Status(String StatusID) {
        try {

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;

            ps = c.prepareStatement("Delete FROM dcaa_databse.student_status_list where Student_statud_id='" + StatusID + "'");
            ps.execute();
            JOptionPane.showMessageDialog(this, "Status Removed", "Status Removed", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    void loadData_Description() {
        try {
            //  String s = "%" + Search.getText() + "%";
            model.setRowCount(0);
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            ArrayList<String> feesArrayList = new ArrayList<>();
//            ps = c.prepareStatement("Select idFee_Charges, Fee_Name, Description, Value, Category_of_charges from fee_charges where Description like '" + s + "' ");
            // rs = ps.executeQuery();
            while (rs.next()) {
                feesArrayList.add(rs.getString(1));
                model.addRow(new Object[]{rs.getString(1), rs.getString(3), rs.getString(4), rs.getString(5), false});

            }
            System.out.println(feesArrayList);

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    void loadData_FeeID() {
        try {
            //String s = "%" + Search.getText() + "%";
            model.setRowCount(0);
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            ArrayList<String> feesArrayList = new ArrayList<>();
            // ps = c.prepareStatement("Select idFee_Charges, Fee_Name, Description, Value, Category_of_charges from fee_charges where idFee_Charges like '" + s + "' ");
            //rs = ps.executeQuery();
            while (rs.next()) {
                feesArrayList.add(rs.getString(1));
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3)});

            }
            System.out.println(feesArrayList);

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    void loadData_Value() {
        try {
            // String s = "%" + Search.getText() + "%";
            model.setRowCount(0);
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            ArrayList<String> feesArrayList = new ArrayList<>();
            // ps = c.prepareStatement("Select idFee_Charges, Fee_Name, Description, Value, Category_of_charges from fee_charges where Value like '" + s + "' ");
            // rs = ps.executeQuery();
            while (rs.next()) {
                feesArrayList.add(rs.getString(1));
                model.addRow(new Object[]{rs.getString(1), rs.getString(3), rs.getString(4), rs.getString(5), false});

            }
            System.out.println(feesArrayList);

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    void CreateTable() {
        try {

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;

            ps = c.prepareStatement("CREATE TABLE IF NOT EXISTS `dcaa_databse`.`Student_status_List` (\n"
                    + "  `Student_statud_id` INT NOT NULL AUTO_INCREMENT,\n"
                    + "  `Student_Status_name` VARCHAR(255) NOT NULL,\n"
                    + "  `Description` VARCHAR(255) NULL,\n"
                    + "  `createtime` DATETIME NULL,\n"
                    + "  `updatetime` DATETIME NULL,\n"
                    + "  `createdby` VARCHAR(45) NULL,\n"
                    + "  PRIMARY KEY (`Student_statud_id`))");
            ps.execute();

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
