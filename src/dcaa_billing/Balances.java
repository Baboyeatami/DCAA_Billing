/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcaa_billing;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jamie Eduardo Rosal <Jamiewertalmighty@gmail.com>
 */
public class Balances extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    ArrayList<String> Sy_list = new ArrayList<>();
    ArrayList<String> Sy_list_display = new ArrayList<>();
    String StringID;
    Statements payment_History = null;
    StudentBill studentBill = null;

    JMenuItem ViewBill = new JMenuItem("View Bill");
    JMenuItem Payment = new JMenuItem("View Payment History");
    MainFrame main;
    JPopupMenu menu = new JPopupMenu();
    Balances mainBal = this;
    private static DecimalFormat df1 = new DecimalFormat("#,###.##");
    //boolean Registrar = false;

    /**
     * Creates new form Balances
     */
    public Balances() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();

        ViewBill.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                if (studentBill == null) {
                    studentBill = new StudentBill();
                    //  studentBill.LoadBilling(StringID, Sy_list.get(jTable1.getSelectedRow()));
                    studentBill.set_ID(StringID, Sy_list.get(Sy_list_display.indexOf(model.getValueAt(jTable1.getSelectedRow(), 0))));
                    studentBill.setVisible(true);

                } else {
                    studentBill.dispose();
                    studentBill = new StudentBill();
                    // studentBill.LoadBilling(StringID, Sy_list.get(jTable1.getSelectedRow()));
                    studentBill.set_ID(StringID, Sy_list.get(Sy_list_display.indexOf(model.getValueAt(jTable1.getSelectedRow(), 0))));
                    studentBill.setVisible(true);

                }

            }
        });

        Payment.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                if (payment_History == null) {
                    payment_History = new Statements();
                    payment_History.setBounds(62, -1, 1100, 550);
                    payment_History.set_id(StringID, Sy_list.get(Sy_list_display.indexOf(model.getValueAt(jTable1.getSelectedRow(), 0))));
                    Display_StatementWindow(main);
                    main.DesktopPane.add(payment_History);
                    payment_History.set_BalanceMode(mainBal);
                    payment_History.setVisible(true);
                } else {
                    payment_History.dispose();
                    payment_History = new Statements();
                    payment_History.setBounds(62, -1, 1100, 550);
                    payment_History.set_id(StringID, Sy_list.get(Sy_list_display.indexOf(model.getValueAt(jTable1.getSelectedRow(), 0))));
                    Display_StatementWindow(main);
                    main.DesktopPane.add(payment_History);
                    payment_History.set_BalanceMode(mainBal);
                    payment_History.balmain.setAlwaysOnTop(false);
                    payment_History.setVisible(true);

                }

            }
        });

        menu.add(ViewBill);
        menu.add(Payment);

        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    menu.show(e.getComponent(), e.getX(), e.getY());

                }

            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        StudentId = new javax.swing.JLabel();
        Student_Name = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Acccount Balance");
        setBounds(new java.awt.Rectangle(182, 124, 0, 0));
        setMinimumSize(new java.awt.Dimension(1070, 500));
        setPreferredSize(new java.awt.Dimension(1075, 512));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(51, 51, 51));

        StudentId.setBackground(new java.awt.Color(255, 255, 255));
        StudentId.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        StudentId.setForeground(new java.awt.Color(255, 255, 255));
        StudentId.setText("Student ID:");

        Student_Name.setBackground(new java.awt.Color(255, 255, 255));
        Student_Name.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Student_Name.setForeground(new java.awt.Color(255, 255, 255));
        Student_Name.setText("Name");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Balance History");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(StudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Student_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(157, 157, 157)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(351, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Student_Name, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "School year", "Billed Amount", "Total Payment", "Balance"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Total Balance");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println(getBounds());

        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        System.out.println((Sy_list_display.indexOf(model.getValueAt(jTable1.getSelectedRow(), 0))));
        System.out.println(Sy_list.get(Sy_list_display.indexOf(model.getValueAt(jTable1.getSelectedRow(), 0))));

    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Balances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Balances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Balances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Balances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Balances().setVisible(true);
            }
        });
    }

    void load_Balance(String id) {

        try {
            model.setRowCount(0);
            StringID = id;
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            double bill = 0, balance, payed = 0, total = 0;
            Sy_list.clear();
            Sy_list_display.clear();
            total = 0;

            ps = c.prepareStatement("Select F_name,M_name,L_name from student_info where id='" + id + "'");
            rs = ps.executeQuery();

            if (rs.next()) {
                StudentId.setText("Student ID: " + id);
                Student_Name.setText("Name: " + rs.getString(1) + " " + rs.getString(2) + " " + rs.getString(3));

            }
            ps.close();
            rs.close();

            ps = c.prepareStatement("SELECT idSchool_Year ,School_Year,semester FROM dcaa_databse.school_year");
            rs = ps.executeQuery();

            while (rs.next()) {
                Sy_list.add(rs.getString(1));
                Sy_list_display.add(rs.getString(2) + "-" + rs.getString(3));
                System.out.println("School year loaded:" + rs.getString(1));

            }
            ps.close();
            rs.close();

            for (int i = 0; i < Sy_list.size(); i++) {
                ps = c.prepareStatement("SELECT  SUM(Amount) FROM dcaa_databse.billing where Student_Info_idStudent_Info='" + id + "' and School_Year_idSchool_Year='" + Sy_list.get(i) + "'; ");
                rs = ps.executeQuery();
                if (rs.next()) {
                    bill = rs.getDouble(1);
                    System.out.print("Bill for " + Sy_list_display.get(i) + ": " + bill + " ");
                }

                ps.close();
                rs.close();

                ps = c.prepareStatement("SELECT SUM(Value) FROM dcaa_databse.invoice where Student_Info_idStudent_Info='" + id + "' and School_Year_idSchool_Year='" + Sy_list.get(i) + "'");
                rs = ps.executeQuery();
                if (rs.next()) {
                    payed = rs.getDouble(1);
                    System.out.print("Payed:" + payed + " ");
                }
                ps.close();
                rs.close();
                balance = bill - payed;
                System.out.print("Balance:" + balance);
                System.out.println("");
                total = total + balance;

                if (bill != 0) {
                    model.addRow(new Object[]{Sy_list_display.get(i), df1.format(bill), df1.format(payed), df1.format(balance)});

                }

            }

            System.out.println("Total Balance:" + total);
            jLabel5.setText("Total Balance:" + df1.format(total));

        } catch (SQLException ex) {
            Logger.getLogger(Balances.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void Display_StatementWindow(MainFrame frame) {
        main = frame;
    }

    void Set_registar_mode(boolean mode) {
        if (mode) {
            menu.remove(ViewBill);
            System.out.println("View Bill Removed");
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel StudentId;
    private javax.swing.JLabel Student_Name;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
