package dcaa_billing;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Jamie Eduardo Rosal <Jamiewertalmighty@gmail.com>
 */
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

public class Batch_Payment extends javax.swing.JFrame {

    ArrayList<String> Sydisplay = new ArrayList<>();
    ArrayList<String> idSydisplay = new ArrayList<>();
    DefaultTableModel model = new DefaultTableModel();
    DefaultComboBoxModel SYBoxModel;
    Name_Search search;
    String SY_id;
    ArrayList<String> SelectedPayments = new ArrayList<>();
    ArrayList<String> ORNumber = new ArrayList<>();
    ArrayList<String> Payment = new ArrayList<>();
    ArrayList<String> StudentID = new ArrayList<>();
    ArrayList<String> SchoolY = new ArrayList<>();
    String Userid;
    private static DecimalFormat df2 = new DecimalFormat("#,###.##");
    JMenuItem RemovedBill = new JMenuItem("Removed Bill");
    JMenuItem EditBill = new JMenuItem("Edit Bill");
    JPopupMenu menu = new JPopupMenu();

    /**
     * Creates new form Batch_Posting
     */
    public Batch_Payment() {

        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        load_SYandDepartments();
        SY_id = idSydisplay.get(SY.getSelectedIndex());
        System.out.println("Sy Id for batch Payemnt:" + SY_id);

        RemovedBill.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String Refno = model.getValueAt(jTable1.getSelectedRow(), 1).toString();
                Revmove_Data(Refno);

            }
        });

        EditBill.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            }
        });

        menu.add(RemovedBill);
        // menu.add(EditBill);

        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    menu.show(e.getComponent(), e.getX(), e.getY());

                }

            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SY = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        PostingDate = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Total = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(142, 47, 0, 0));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Posting Date:");

        SY.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        SY.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SYItemStateChanged(evt);
            }
        });

        jLabel2.setText("School Year:");

        jLabel3.setText("Batch Payment");

        PostingDate.setDateFormatString("MMMM d, yyyy");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PostingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(SY, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(jLabel3)
                .addContainerGap(299, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(PostingDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date ", "Reference Number", "Charge Name", "Chage Value", "Payment ", "OR number", "Student Id", "School Year"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Add Data");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Post");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Clear Data");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 592, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Total Payment:");

        Total.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Total.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.out.println(getBounds());
        dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Date date = PostingDate.getDate();

        if (date == null) {
            JOptionPane.showMessageDialog(this, "Invalid Posting Date, Please select a valid posting Date");
        } else {
            if (search == null) {
                search = new Name_Search();
                search.Name_search_BatchPayment(true, this, idSydisplay.get(SY.getSelectedIndex()));

                search.setVisible(true);

            } else {
                search.Name_search_BatchPayment(true, this, idSydisplay.get(SY.getSelectedIndex()));

                search.setVisible(true);

            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void SYItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SYItemStateChanged
        SY_id = idSydisplay.get(SY.getSelectedIndex());
    }//GEN-LAST:event_SYItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {

            if (SelectedPayments.size() == 0) {
                JOptionPane.showMessageDialog(this, "No trasactions added, Unable to post payments");
            } else {

                PostPayments();
                JOptionPane.showMessageDialog(this, "Batch Payment Data will be cleared");

                ClearData();
            }
        } catch (ParseException ex) {
            Logger.getLogger(Batch_Payment.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (SelectedPayments.size() == 0) {
            JOptionPane.showMessageDialog(this, "Data already cleared");
        } else {
            ClearData();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Batch_Payment.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Batch_Payment.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Batch_Payment.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Batch_Payment.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Batch_Payment().setVisible(true);
            }
        });
    }

    void load_SYandDepartments() {

        try {

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            ps = c.prepareStatement("Select idschool_year,School_Year,Semester from school_year");
            rs = ps.executeQuery();
            while (rs.next()) {
                Sydisplay.add(rs.getString(2) + "-" + rs.getString(3));
                idSydisplay.add(rs.getString(1));
            }
            rs.close();
            SYBoxModel = new DefaultComboBoxModel(Sydisplay.toArray());
            SY.setModel(SYBoxModel);

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    void LookUP_Charge(String Reference_num) {

        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            ps = c.prepareStatement("Select idschool_year,School_Year,Semester from school_year");
            rs = ps.executeQuery();

        } catch (SQLException ex) {
            Logger.getLogger(Batch_Payment.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    void PostPayments() throws ParseException {
        SimpleDateFormat df = new SimpleDateFormat("yyyy/MM/d");
        String timeStamp = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime());
        String dateString = String.valueOf(df.format(PostingDate.getDate()));
        Date myDate = df.parse(dateString);
        DBConnection.init();
        Connection c = DBConnection.getConnection();
        PreparedStatement ps;
        ResultSet rs = null;
        System.out.println("Date String" + dateString);
        for (int i = 0; i < SelectedPayments.size(); i++) {
            System.out.println("OR number" + ORNumber.get(i));
            try {
                ps = c.prepareStatement("Select Amount,Fee_Charges_idFee_Charges,School_Year_idSchool_Year from billing where ReferenceNo='" + SelectedPayments.get(i) + "'");
                rs = ps.executeQuery();
                if (rs.next()) {
                    ps = c.prepareStatement("Insert into invoice (Value, Particulars, Category_of_charges_idCategory_of_charges, Student_Info_idStudent_Info, OrNum, DATE, School_Year_idSchool_Year, UseAccounts_idUseAccounts)values" + "('" + Payment.get(i) + "','" + SelectedPayments.get(i) + "','" + rs.getString(2) + "','" + StudentID.get(i) + "','" + ORNumber.get(i) + "','" + dateString + "','" + SchoolY.get(i) + "','" + Userid + "')");
                    ps.execute();

                }

                Activity_log(SelectedPayments.get(i), ORNumber.get(i));

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }

        }

        JOptionPane.showMessageDialog(this, "Payments Posted Successfully!");
    }

    void LoadData() {
        try {
            SimpleDateFormat df = new SimpleDateFormat("yyyy/MM/d");
            String timeStamp = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime());
            String dateString = String.valueOf(df.format(PostingDate.getDate()));
            Date myDate = df.parse(dateString);
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            System.out.println("Date String" + dateString);
            model.setRowCount(0);
            for (int i = 0; i < SelectedPayments.size(); i++) {
                System.out.println("OR number" + ORNumber.get(i));
                try {
                    ps = c.prepareStatement("Select Amount,Fee_Charges_idFee_Charges,School_Year_idSchool_Year,Particulars from billing where ReferenceNo='" + SelectedPayments.get(i) + "'");
                    rs = ps.executeQuery();
                    if (rs.next()) {
                        model.addRow(new Object[]{dateString, SelectedPayments.get(i), rs.getString("Particulars"), rs.getString("Amount"), Payment.get(i), ORNumber.get(i), StudentID.get(i), Sydisplay.get(idSydisplay.indexOf(SchoolY.get(i)))});

                    }

                } catch (SQLException ex) {
                    Logger.getLogger(Batch_Payment.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
            System.out.println("Data Loaded on Batch Payment");
        } catch (ParseException ex) {
            Logger.getLogger(Batch_Payment.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    void Set_Data(String Studentid, String Reffernce, String Payments, String ORnum) {
        StudentID.add(Studentid);
        SelectedPayments.add(Reffernce);
        Payment.add(Payments);
        ORNumber.add(ORnum);

    }

    void ClearData() {
        SelectedPayments.clear();
        ORNumber.clear();
        Payment.clear();
        StudentID.clear();
        SchoolY.clear();
        Total.setText("");
        model.setRowCount(0);
    }

    void Display_Data() {
        System.out.println("Reference Numbers");
        System.out.println(SelectedPayments);
        System.out.println("OR numbers");
        System.out.println(ORNumber);
        System.out.println("Payments");
        System.out.println(Payment);
        System.out.println("Student IDs");
        System.out.println(StudentID);

    }

    void Activity_log(String Transaction, String Ornum) {

        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs = null;
            String timeStamp = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime());

            ps = c.prepareStatement("Insert into activity_log ( Activity_name, Description, Date, UseAccounts_idUseAccounts) values ('Batch Payment ','" + Ornum + "','" + timeStamp + "','" + Userid + "')");
            ps.execute();
            System.out.println("batch payment activity loged");

        } catch (SQLException ex) {
            Logger.getLogger(Section.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    void CompututeTransaction() {
        double total = 0;

        for (int i = 0; i < Payment.size(); i++) {
            total = total + Double.parseDouble(Payment.get(i));
        }
        System.out.println("Total batch Payment: " + total);
        Total.setText(df2.format(total));
    }

    void Revmove_Data(String RefNo) {
        System.out.println("Selected Reference Number to be Removed: " + RefNo);
        int index = SelectedPayments.indexOf(RefNo);
        SelectedPayments.remove(index);
        ORNumber.remove(index);
        Payment.remove(index);
        StudentID.remove(index);

        System.out.println(SelectedPayments);
        System.out.println(ORNumber);
        System.out.println(Payment);
        System.out.println(StudentID);
        System.out.println("Selected payment size:" + SelectedPayments.size());
        System.out.println("ORnumber size" + ORNumber.size());
        System.out.println(Payment.size());
        System.out.println(StudentID.size());
        JOptionPane.showMessageDialog(this, "Data with Ref No. @ " + RefNo + " removed!");
        LoadData();
        CompututeTransaction();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser PostingDate;
    public javax.swing.JComboBox<String> SY;
    private javax.swing.JLabel Total;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
