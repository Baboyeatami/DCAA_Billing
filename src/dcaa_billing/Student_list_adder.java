/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcaa_billing;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jamie Eduardo Rosal <Jamiewertalmighty@gmail.com>
 */
public class Student_list_adder extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    String StudentID;
    String SectionId;
    String SYyear;
    JMenuItem AddStudent = new JMenuItem("Add to list");
    JPopupMenu menu = new JPopupMenu();
    Batch_posting main;
    boolean postingMode;
    String Sy_id;
    Section_Manager manager;

    /**
     * Creates new form Student_list_adder
     */
    public Student_list_adder() {
        initComponents();
        model = (DefaultTableModel) jTable2.getModel();
        load_Studentlist();

        AddStudent.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("Add Student");
                if (postingMode) {

                    if (radio_student.isSelected()) {
                        Add_student_batch();
                        if (manager != null) {
                            manager.Load_data();
                        }

                    } else if (radio_section.isSelected()) {
                        Add_toBatchPost();
                        if (manager != null) {
                            manager.Load_data();
                        }
                    }

                } else {
                    Add_student();
                    if (manager != null) {
                        manager.Load_data();
                    }
                }

            }
        });

        menu.add(AddStudent);

        jTable2.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    menu.show(e.getComponent(), e.getX(), e.getY());

                }
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        Search = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        radio_student = new javax.swing.JRadioButton();
        radio_section = new javax.swing.JRadioButton();
        SearchCretiar = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(884, 79, 0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Search");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 16, -1, -1));

        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        getContentPane().add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 227, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 48, 418, 445));

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 500, -1, 30));

        jButton2.setText("Add to Section");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 500, -1, 30));

        buttonGroup1.add(radio_student);
        radio_student.setText("Student");
        radio_student.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radio_studentItemStateChanged(evt);
            }
        });
        radio_student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_studentActionPerformed(evt);
            }
        });
        getContentPane().add(radio_student, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, -1, -1));

        buttonGroup1.add(radio_section);
        radio_section.setText("Section");
        radio_section.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radio_sectionItemStateChanged(evt);
            }
        });
        radio_section.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_sectionActionPerformed(evt);
            }
        });
        getContentPane().add(radio_section, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 500, -1, -1));

        SearchCretiar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Last Name", "Student ID", "First Name" }));
        SearchCretiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchCretiarActionPerformed(evt);
            }
        });
        getContentPane().add(SearchCretiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 130, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println(getBounds());
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        StudentID = (String) model.getValueAt(jTable2.getSelectedRow(), 0);
        System.out.println(StudentID);

    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (postingMode) {

            if (radio_student.isSelected()) {
                Add_student_batch();
                if (manager != null) {
                    manager.Load_data();
                }

            } else if (radio_section.isSelected()) {
                Add_toBatchPost();
                if (manager != null) {
                    manager.Load_data();
                }
            }

        } else {
            Add_student();
            if (manager != null) {
                manager.Load_data();
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void radio_sectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_sectionActionPerformed
        // TODO add your handling code here:
        load_section();
    }//GEN-LAST:event_radio_sectionActionPerformed

    private void radio_studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_studentActionPerformed
        // TODO add your handling code here:
        Load_list();
    }//GEN-LAST:event_radio_studentActionPerformed

    private void radio_studentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radio_studentItemStateChanged
        // TODO add your handling code here:
        Load_list();
    }//GEN-LAST:event_radio_studentItemStateChanged

    private void radio_sectionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radio_sectionItemStateChanged
        // TODO add your handling code here:
        load_Studentlist();
    }//GEN-LAST:event_radio_sectionItemStateChanged

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
        SearchName();
    }//GEN-LAST:event_SearchActionPerformed

    private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyPressed
        // TODO add your handling code here:
        if (postingMode) {

            if (radio_student.isSelected()) {
                Add_student_batch();
                if (manager != null) {
                    manager.Load_data();
                }

            } else if (radio_section.isSelected()) {
                Add_toBatchPost();
                if (manager != null) {
                    manager.Load_data();
                }
            }

        } else {
            Add_student();
            if (manager != null) {
                manager.Load_data();
            }
        }
    }//GEN-LAST:event_jTable2KeyPressed

    private void SearchCretiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchCretiarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchCretiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student_list_adder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student_list_adder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student_list_adder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student_list_adder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student_list_adder().setVisible(true);
            }
        });
    }

    void Add_student() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps, ps1;
            ResultSet rs, rs1 = null;

            ps = c.prepareStatement("Insert into sectioning (SectionGradelevel, studentid, section_id, Sy_id) values ('" + 1 + "','" + StudentID + "','" + SectionId + "','" + SYyear + "')");
            ps.execute();
            JOptionPane.showMessageDialog(this, "Student added!");
        } catch (SQLException ex) {
            Logger.getLogger(Student_list_adder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void load_Studentlist() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps, ps1;
            ResultSet rs, rs1 = null;
            model.setRowCount(0);
            ps = c.prepareStatement("Select id,F_name,M_name,L_name from student_info");
            rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(4) + ", " + rs.getString(2) + " " + rs.getString(3)});
            }

        } catch (SQLException ex) {
            Logger.getLogger(Student_list_adder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void SearchName() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps, ps1;
            ResultSet rs = null, rs1 = null;
            model.setRowCount(0);
            String S = "%" + Search.getText() + "%";
            if (SearchCretiar.getSelectedIndex() == 0) {
                ps = c.prepareStatement("Select id,F_name,M_name,L_name from student_info where L_name like '" + S + "' limit 10");
                rs = ps.executeQuery();

            } else if (SearchCretiar.getSelectedIndex() == 1) {
                ps = c.prepareStatement("Select id,F_name,M_name,L_name from student_info where id like '" + S + "' limit 10");
                rs = ps.executeQuery();

            } else if (SearchCretiar.getSelectedIndex() == 2) {
                ps = c.prepareStatement("Select id,F_name,M_name,L_name from student_info where F_name like '" + S + "' limit 10");
                rs = ps.executeQuery();
                System.out.println(S);
            }

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(4) + ", " + rs.getString(2) + " " + rs.getString(3)});
            }

        } catch (SQLException ex) {
            Logger.getLogger(Student_list_adder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void load_section() {

        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps, ps1;
            ResultSet rs = null;
            model.setRowCount(0);
            ps = c.prepareStatement("Select idsection, SectionName from Section");
            rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(2)});
            }

        } catch (SQLException ex) {
            Logger.getLogger(Student_list_adder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void add_section_to_list() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps, ps1;
            ResultSet rs = null;
            System.out.println("Sy=" + Sy_id);
            ps = c.prepareStatement("Select studentid from sectioning where section_id='" + StudentID + "' and Sy_id='" + Sy_id + "'");
            rs = ps.executeQuery();
            while (rs.next()) {
                System.out.println(rs.getString(1));
            }

        } catch (SQLException ex) {
            Logger.getLogger(Student_list_adder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void PostingListMode(String mode) {
        if (mode.equals("Student")) {
            radio_student.setSelected(true);
        } else if (mode.equals("Section")) {
            radio_section.setSelected(true);
        }
    }

    void Load_list() {
        if (radio_section.isSelected()) {
            load_Studentlist();
        } else if (radio_section.isSelected()) {
            load_section();
        } else {
            load_Studentlist();
        }

    }

    void set_batchPostingMode(Boolean mode, Batch_posting cc, String SY) {
        postingMode = mode;
        main = cc;
        jButton2.setSize(250, 500);
        Sy_id = SY;
        jButton2.setText("Add");

    }

    void Add_toBatchPost() {

        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps, ps1;
            ResultSet rs = null;
            ps = c.prepareStatement("Select studentid from sectioning where section_id='" + StudentID + "'");
            rs = ps.executeQuery();

            while (rs.next()) {
                main.addStudent(rs.getString(1));
                System.out.println(rs.getString(1) + " Added to list");

            }

            main.loadDisplayStudentlist();

        } catch (SQLException ex) {
            Logger.getLogger(Student_list_adder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void Add_student_batch() {
        main.addStudent(StudentID);
        System.out.println(StudentID + " Added to list");
        main.loadDisplayStudentlist();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Search;
    private javax.swing.JComboBox<String> SearchCretiar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JRadioButton radio_section;
    private javax.swing.JRadioButton radio_student;
    // End of variables declaration//GEN-END:variables
}
